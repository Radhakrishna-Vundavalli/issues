---++ Doc Log 1383807646_01
        $ Date: Thu Nov 07:: 12:30:46
        $ Summary: changing multi users passwords - script

---++++ Details:
<pre>
Note:- Create a file with userid and encrypted passwd (xyzuser sfjdkfpasswd)

#!/usr/bin/bash

# Description:  Replace encrypted password in /etc/shadow file with refference to /var/tmp/users file

# Environment:  Solaris 5.10 

# Execute this script on your own risk...

#

# -------------------------------------------------------------------#

# Create /var/tmp/users file with user names and encrypted passwords #

# Ex :- testuser xyskdiedl                                           #

# -------------------------------------------------------------------#

#

#

PATH=/usr/bin:/usr/sbin:/usr/ccs/bin:/usr/ucb:/sbin:/usr/local/soe/bin:/usr/local/bin;export PATH

FILE=/var/tmp/users

     if [ `uname -s` == "SunOS" ]; then

     if [ `uname -r` == "5.7" ] || [ `uname -r` == "5.8" ] ; then

	if [ `whoami` == root ];then

           if [ -r $FILE ];then

	      if [[ -s $FILE ]] ; then



   # Check if users files having correct data.	



	val=`awk '{ FS = " " } ; { print NF}' $FILE|grep -v 2`

        if [ $val ==  ] > /dev/null 2>&1

        then

        cp -pr /etc/passwd /etc/passwd.`date +%d%m%Y_%H%M%S`

        cp -pr /etc/shadow /etc/shadow.`date +%d%m%Y_%H%M%S`

     	for USER in `cat $FILE |awk '{print $1}'`

        do

        OLDPW=`grep $USER /etc/shadow | cut -f 2 -d ":"`

        USERCK=`grep $USER /etc/shadow | cut -f 2 -d ":" | wc -l`



    # Check if userid exists in /etc/shadow.



    if [[ $USERCK -lt 1 ]]

    then

    echo -e "\e[31mNo users matching with $USER\e[0m"

    continue

    else

    sleep 0

    fi



    # Check if multiple userids exist. If there are, fail out.



    if [[ $USERCK -gt 1 ]]

    then

    echo -e "\e[31mMultiple users matching $USER\e[0m"

    continue

    else

    sleep 0

    fi



    # Check if no login account.



    if [[ $OLDPW == NL ]]

    then

    echo -e "\e[31m$USER account is a no login account, can not change the password\e[0m"

    continue

    else

    sleep 0

    fi



    # Check if user is locked. if so unlock the user.

    

    PASSWDCK=`passwd -s $USER|awk '{print $2}'`



if [ `uname -r` == 5.10 ] || [ `uname -r` == 5.11 ]; then

    

    if [[ $PASSWDCK == LK ]]

    then

    echo -e "\e[31mPassword is locked for $USER\e[0m\e[32m unlocking .......!!\e[0m"

    passwd -u $USER > /dev/null 2>&1

    else

    sleep 0

    fi

else

    if [[ $PASSWDCK == LK ]]

    then

    echo -e "\e[31mPassword is locked for $USER\e[0m\e[32m unlocking .......!!\e[0m"

    passwd -d $USER > /dev/null 2>&1

    else

    sleep 0

    fi

fi





    # Check if the user have valide password.

if [ `uname -r` == 5.10 ] || [ `uname -r` == 5.11 ]; then

    

    PASSWDCK1=`passwd -s $USER|awk '{print $2}'`



    if [[ $PASSWDCK1 == NP ]]

    then

    echo -e "\e[31mNo password for $USER\e[0m\e[32m Setting password........!!\e[0m"

    passwd -N $USER > /dev/null 2>&1

    else

    sleep 0

    fi

else

    PASSWDCK1=`passwd -s $USER|awk '{print $2}'`



    if [[ $PASSWDCK1 == NP ]]

    then

    echo -e "\e[31mNo password for $USER\e[0m\e[32m Setting password........!!\e[0m"

    passwd $USER	

#    /usr/bin/cp -pr /etc/shadow /etc/shadow_1

#    sed -e "s/(^|$)/'/g;/$USER/s/:/:NP/" /etc/shadow_1 > /etc/shadow

    else

    sleep 0

    fi

fi



    # Check if password has already been set to newone.



    PASSWD=`grep -i $USER $FILE|awk '{print $2}'`

    OLDPW1=`grep $USER /etc/shadow | cut -f 2 -d ":"`



    if [[ $OLDPW1 = $PASSWD ]]

    then

    echo -e "\e[31mPassword already matches for $USER\e[0m"

    continue

    else

    sleep 1

    fi



    echo -e "\e[32mSetting password for $USER\e[0m"

    /usr/bin/cp -pr /etc/shadow /etc/shadow_backup_`date +%d%m%Y`

    /usr/bin/sed -e "/$USER/s|$OLDPW1|$PASSWD|g" /etc/shadow_backup_`date +%d%m%Y` > /etc/shadow

    /usr/bin/passwd -f $USER > /dev/null 2>&1

    done

        /usr/bin/pwconv

        /usr/bin/rm /etc/shadow_backup_`date +%d%m%Y` > /dev/null 2>&1

        /usr/bin/rm $FILE

    else

                echo -e "\e[31mSorry, $FILE file data not corret plesae verify ......!\e[0m"

        fi

    else 

		echo -e "\e[31m$FILE is empty file....!!!\e[0m"

	fi 

    else

                echo -e "\e[31mSorry, unable to find $FILE file, can not proceed ....\e[0m"

        fi

    else

        user=`id | cut -d= -f2 | cut -d\( -f2 |cut -d\) -f1`

        echo -e "\e[31mSorry, you are NOT root user. you are $user user and cannot run this script\e[0m"

        fi

    else

        echo -e "\e[31mScript not support on this Os version\e[0m"

    fi	

    else

        echo -e "\e[31mSorry, OS not support please check, this script is only for Solaris OS \e[0m"

        fi
</pre>
